在JAVA中有两类事务，JDBC事务和JTA事务，如果是JDBC类型的事务，则是由Connection类来控制的。
如果创建一个Connection对象时，没有显示调用setTransactionIsolation(int level) 方法，则Connection使用当前数据库默认的事务隔离级别，数据库的默认事务隔离级别可以通过相应的SQL语句进行查询，例如在Mysql数据库下可使用 select @@tx_isolation;语句查看当前数据库的事务隔离级别。

JDBC的Connection类针对事务的隔离性定义了五个隔离级别。
Connection.TRANSACTION_NONE
Connection.TRANSACTION_READ_COMMITTED
Connection.TRANSACTION_READ_UNCOMMITTED
Connection.TRANSACTION_REPEATABLE_READ
Connection.TRANSACTION_SERIALIZABLE

org.apache.ibatis.transaction.Transaction
	 org.apache.ibatis.transaction.jdbc.JdbcTransaction
	 org.apache.ibatis.transaction.managed.ManagedTransaction

在mybatis中，通过一个Enum类org.apache.ibatis.session.TransactionIsolationLevel来定义了事务的隔离级别：


1.脏读：如果一个事务对数据进行了更新，但事务还没有提交，另一个事务就可以“看到”该事务没有提交的更新结果。这样造成的问题是，如果第一个事务回滚，那么第二个事务在此之前所“看到”的数据就是一笔脏数据。
2.不可重复读：指同个事务在整个事务过程中对同一笔数据进行读取，每次读取结果都不同。如果事务1在事务2的更新操作之前读取一次数据，在事务2的更新操作之后再读取同一笔数据一次，两次结果是不同的。所以TRANSACTION_READ_COMMITTED是无法避免不可重复读和虚读。
3.幻读：指同样一个查询在整个事务过程中多次执行后，查询所得的结果集是不一样的。幻读针对的是多笔记录。